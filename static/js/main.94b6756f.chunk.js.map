{"version":3,"sources":["config.js","Components/MainNav.js","Components/Photo.js","Components/NotFound.js","Components/Loading.js","Components/PhotoContainer.js","Components/SearchForm.js","Components/Error.js","App.js","index.js"],"names":["API_ACCESS_KEY","MainNav","className","to","Photo","props","src","url","alt","title","NotFound","Loading","PhotoContainer","state","isMounted","this","setState","photos","results","data","length","map","photo","farm","server","id","secret","Component","SearchForm","searchText","onSearchChange","e","target","value","handleSubmit","preventDefault","path","query","onSearch","history","push","currentTarget","reset","onSubmit","type","name","onChange","ref","input","placeholder","required","fill","height","viewBox","width","xmlns","d","withRouter","Error","App","initialPhotos","surfPhotos","snowPhotos","rainPhotos","loading","performSearch","axios","get","then","response","catch","error","console","log","prevProps","location","pathname","replace","basename","exact","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.94b6756f.chunk.js","sourcesContent":["\nconst API_ACCESS_KEY = 'e8b485b98911d9629f7b9503967bf044';\n\nexport default API_ACCESS_KEY;","import React from 'react';\nimport {NavLink} from 'react-router-dom';\n\n\n/* Default topic links */\nfunction MainNav () {\n    return (\n        <nav className=\"main-nav\">\n        <ul>\n          <li><NavLink to=\"/surf\">Surf</NavLink></li>\n          <li><NavLink to=\"/snow\">Snow</NavLink></li>\n          <li><NavLink to=\"/rain\">Rain</NavLink></li>\n        </ul>\n      </nav>\n    )\n}\n\n\n\n\nexport default MainNav;","import React from 'react';\n\nconst Photo = (props) => (\n   \n  <li>\n    <img src={props.url} alt={props.title}/>\n  </li>\n  \n)\n\n\nexport default Photo;","import React from 'react';\n\n\nconst NotFound= () => {\n    return (\n        \n            <h3>Sorry, no results found. Try searching a different topic.</h3>\n       \n    )\n}\n\nexport default NotFound;","\n\nconst Loading = () => {\n    return (\n        \n            <h3>Loading ...</h3>\n     \n    )\n}\n\nexport default Loading;","import React, {Component} from 'react';\nimport Photo from './Photo';\nimport NotFound from './NotFound';\nimport Loading from './Loading';\n\nclass PhotoContainer extends Component { \n\n  // Prevents NotFound component from being rendered before results are returned\n  state = {\n    isMounted: false\n  }\n\n  // Sets is mounted to true to render Loading component if results are still being fetched\n  componentDidMount(){\n    this.setState({isMounted: true\n    })\n  }\n /* Maps over photo array to display results */\n  render () {\n    const results = this.props.data;\n    let photos;\n    if (results.length > 0 ) {\n        photos = results.map(photo => {\n        return  <Photo  url={`https://farm${photo.farm}.staticflickr.com/${photo.server}/${photo.id}_${photo.secret}_m.jpg`} key={photo.id} title={photo.title}/>\n        });\n\n      } else if (results.length < 1 && this.state.isMounted === true ){\n        return <Loading />\n    \n\n\n      } else {\n        /* Renders message to user if no results from search */\n        return <NotFound />\n          }\n    \n      return(\n        <div className=\"photo-container\">\n          <h2>Search Results {this.props.title}</h2>\n          <ul>\n            {photos} \n          </ul> \n        </div>\n      );\n    }      \n} \n  \n  \n\n\nexport default PhotoContainer;","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\n\n\n\n/* Handles search and button render */\nclass SearchForm extends Component {\n\n  state = {\n    searchText: ''\n  }\n\n  \n    \n\n  onSearchChange = e => {\n    this.setState({searchText: e.target.value})\n  }\n \n  \n  handleSubmit = e => {\n    e.preventDefault();\n    let path = `/search/${this.query.value}`;\n    this.props.onSearch(this.query.value);\n    this.props.history.push(path);\n    e.currentTarget.reset();\n  }\n\n\n  \n\n  render (){\n\n      return (\n        <form className=\"search-form\" onSubmit={this.handleSubmit}>\n        <input  type=\"search\" \n                name=\"search\"\n                onChange={this.onSearchChange}\n                ref={(input) => this.query = input } \n                placeholder=\"Search...\" required/>\n        <button type=\"submit\" className=\"search-button\">\n          <svg fill=\"#fff\" height=\"24\" viewBox=\"0 0 23 23\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"/>\n            <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n          </svg>\n        </button>\n      </form>\n      )\n\n\n  }\n\n}\n\n\n\n\n\n\n\nexport default withRouter(SearchForm);","import React from 'react';\n\n\nconst Error= () => {\n    return (\n        \n            <h3>404 - Page not found!</h3>\n       \n    )\n}\n\nexport default Error;","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Switch, withRouter} from 'react-router-dom';\nimport axios from 'axios';\n\n// Import components\nimport API_ACCESS_KEY from './config';\nimport MainNav from './Components/MainNav';\nimport PhotoContainer from './Components/PhotoContainer';\nimport SearchForm from './Components/SearchForm';\nimport Loading from './Components/Loading';\nimport Error from './Components/Error';\n\n\n\n\n\nclass App extends Component {\n\n  state = {\n    initialPhotos: [],\n    surfPhotos: [],\n    snowPhotos: [],\n    rainPhotos: [],\n    photos: [],\n    query: '',\n    loading: true,\n    title: ''\n  }\n\n\n/* Set search on initial page load */\ncomponentDidMount () {\nthis.performSearch('moon');\nthis.performSearch('surf');\nthis.performSearch('snow');\nthis.performSearch('rain');\nthis.setState({\n  loading: true\n});\n}\n\n  \n\n\n/* Handles search history nav */\ncomponentDidUpdate( prevProps) {\n  if( this.props.location.pathname !== prevProps.location.pathname ) {\n    this.performSearch(this.props.location.pathname.replace('/search/', ''))\n  }\n}\n\n\n/* Handles search capability */\nperformSearch = (query) => {\n  this.setState({loading: true})\n  axios.get(`https://www.flickr.com/services/rest/?method=flickr.photos.search&api_key=${API_ACCESS_KEY}&tags=\"${query}\"&per_page=24&format=json&nojsoncallback=1`)\n  .then(response => {\n    if (query === 'surf')\n      this.setState({  \n        surfPhotos: response.data.photos.photo,\n        loading: false\n      })\n    else if (query === 'snow')\n      this.setState({  \n        snowPhotos: response.data.photos.photo,\n        loading: false\n      })\n    else if (query === 'rain')\n      this.setState({  \n        rainPhotos: response.data.photos.photo,\n        loading: false\n      })\n    else if (query === 'moon')\n      this.setState({  \n        initialPhotos: response.data.photos.photo,\n        loading: false\n      })\n    else{\n      this.setState({  \n        photos: response.data.photos.photo,\n        title: query,\n        loading: false\n      })\n      }\n    })\n  .catch(error =>  {\n    console.log('Error fetching and parsing data', error);\n  });  \n}\n\n\n  /* Renders all photo components */\n  render (){\n    console.log(this.state.photos)\n    return (\n      <BrowserRouter basename=\"/react_gallery_project_7\">\n        <div className=\"container\">\n            <SearchForm onSearch={this.performSearch}/>\n            <MainNav />\n\n            {/* Provides message to user if delay in retreiving request */}\n            {\n              (this.state.loading)\n              ? <Loading />\n              :\n              <Switch>\n                <Route exact path=\"/\" render={() => <PhotoContainer data={this.state.initialPhotos} loading={this.state.loading} />}/>\n                <Route exact path=\"/surf\" render={() => <PhotoContainer data={this.state.surfPhotos} title={'surf'} loading={this.state.loading}/>}/>\n                <Route exact path=\"/snow\" render={() => <PhotoContainer data={this.state.snowPhotos} title={'snow'} loading={this.state.loading}/>}/>\n                <Route exact path=\"/rain\" render={() => <PhotoContainer data={this.state.rainPhotos} title={'rain'} loading={this.state.loading}/>}/>\n                <Route  path=\"/search/:query\" render={() => <PhotoContainer data={this.state.photos} title={this.state.title} loading={this.state.loading} />} />\n                <Route render={() => <Error />} />\n              </Switch>\n            }\n       \n        </div>\n      </BrowserRouter>\n    )\n   \n    }  \n}\n\nexport default withRouter (App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter} from 'react-router-dom';\nimport './index.css';\nimport App from './App';\n\n/* Insert App component into DOM */\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}